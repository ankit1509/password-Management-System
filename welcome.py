# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'welcome.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from editdata import Ui_edit
from updatedata import Ui_update

class Ui_Welcome(object):
    def UPDATE(self):
        self.operation ="UPDATE"
        self.InputWindow = QtWidgets.QWidget()
        self.ui = Ui_update()
        self.ui.setupUi(self.InputWindow)
        self.InputWindow.show()
        self.ui.Ok_btn.clicked.connect(self.edit)

    def REMOVE(self):
        self.operation = "REMOVE"
        self.InputWindow = QtWidgets.QWidget()
        self.ui = Ui_edit()
        self.ui.setupUi(self.InputWindow)
        self.InputWindow.show()
        self.ui.Ok_btn.clicked.connect(self.edit)

    def ADD(self):
        self.operation = "ADD"
        self.InputWindow = QtWidgets.QWidget()
        self.ui = Ui_edit()
        self.ui.setupUi(self.InputWindow)
        self.InputWindow.show()
        self.ui.Ok_btn.clicked.connect(self.edit)

    def edit(self):
        connection = sqlite3.connect("passworddata.db")
        if(self.operation == "ADD"):
            result = connection.execute("SELECT * FROM USERS WHERE WEBSITE = ? and USERNAME = ?",(self.ui.Website.text(),self.ui.Username.text(),))
            if(len(result.fetchall()) == 0):
                connection.execute("INSERT INTO USERS VALUES(?,?,?)",(self.ui.Website.text(), self.ui.Username.text(), self.ui.Password.text()))
            else:
                self.showMessageBox("Edit Data", "Data already exist")
        elif(self.operation == "REMOVE"):
            result = connection.execute("SELECT * FROM USERS WHERE WEBSITE = ? and USERNAME = ? and PASSWORD = ?",(self.ui.Website.text(), self.ui.Username.text(), self.ui.Password.text()))
            if(len(result.fetchall()) > 0):
                connection.execute("DELETE FROM USERS WHERE WEBSITE = ? and USERNAME = ? and PASSWORD = ?",(self.ui.Website.text(), self.ui.Username.text(), self.ui.Password.text()))
            else:
                self.showMessageBox("Edit Data", "Data does not exist")
        elif(self.operation == "UPDATE"):
            result = connection.execute("SELECT * FROM USERS WHERE WEBSITE = ?",(self.ui.Website.text(),))
            if(len(result.fetchall()) > 0):
                connection.execute("""UPDATE USERS SET USERNAME = ? WHERE WEBSITE = ?""",(self.ui.Username.text(), self.ui.Website.text()))
                connection.execute("""UPDATE USERS SET PASSWORD = ? WHERE WEBSITE = ?""",(self.ui.Password.text(), self.ui.Website.text()))
            else:
                self.showMessageBox("Update Data", "Data does not exist")
        connection.commit()
        connection.close()
        self.InputWindow.hide()
        self.load()

    def showMessageBox(self, title, message):
        msgBox = QtWidgets.QMessageBox()
        msgBox.setIcon(QtWidgets.QMessageBox.Warning)
        msgBox.setWindowTitle(title)
        msgBox.setText(message)
        msgBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msgBox.exec_()

    def load(self):
        connection = sqlite3.connect("passworddata.db")
        query = "SELECT * FROM USERS"
        result = connection.execute(query)
        self.tableWidget.setRowCount(0)

        for row_number, row_data in enumerate(result):
            self.tableWidget.insertRow(row_number)
            for colum_number, data in enumerate(row_data):
                self.tableWidget.setItem(row_number, colum_number, QtWidgets.QTableWidgetItem(str(data)))
        
        connection.commit()
        connection.close()


    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(590, 388)
        Form.setStyleSheet("#Form{\n"
"    background-color: qconicalgradient(cx:0.045, cy:0, angle:135, stop:0 rgba(30, 0, 255, 255), stop:0.375 rgba(0, 195, 255, 252), stop:0.423533 rgba(37, 0, 255, 255), stop:0.45 rgba(0, 130, 255, 255), stop:0.477581 rgba(0, 56, 255, 252), stop:0.518717 rgba(71, 171, 255, 255), stop:0.542289 rgba(71, 171, 255, 255), stop:0.547264 rgba(68, 134, 249, 255), stop:0.55 rgba(0, 74, 255, 255), stop:0.552239 rgba(21, 93, 243, 255), stop:0.57754 rgba(102, 0, 255, 255), stop:0.625 rgba(0, 185, 255, 247), stop:1 rgba(255, 255, 0, 69));\n"
"}\n"
"QGroupBox{\n"
"    \n"
"    font: 75 14pt \"MS Sans Serif\";\n"
"    text-decoration: underline;\n"
"\n"
"}\n"
"QPushButton{\n"
"border-radius:10px;\n"
"border:3px solid green;\n"
"color:#000000;\n"
"}\n"
"QTableWidget{\n"
"border-radius:10px;\n"
"border:3px solid green;\n"
"color:#000000;\n"
"    background-color: qconicalgradient(cx:0.000472637, cy:0, angle:227.8, stop:0 rgba(30, 0, 255, 255), stop:0.375 rgba(0, 195, 255, 252), stop:0.423533 rgba(37, 0, 255, 255), stop:0.45 rgba(0, 130, 255, 255), stop:0.477581 rgba(0, 56, 255, 252), stop:0.518717 rgba(71, 171, 255, 255), stop:0.542289 rgba(71, 171, 255, 255), stop:0.547264 rgba(68, 134, 249, 255), stop:0.55 rgba(0, 74, 255, 255), stop:0.552239 rgba(21, 93, 243, 255), stop:0.57754 rgba(102, 0, 255, 255), stop:0.625 rgba(0, 185, 255, 247), stop:1 rgba(255, 255, 0, 69));\n"
"}")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setGeometry(QtCore.QRect(20, 40, 551, 301))
        self.groupBox.setObjectName("groupBox")
        self.tableWidget = QtWidgets.QTableWidget(self.groupBox)
        self.tableWidget.setGeometry(QtCore.QRect(50, 40, 381, 251))
        self.tableWidget.setAutoFillBackground(True)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(440, 50, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.ADD)
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_2.setGeometry(QtCore.QRect(440, 100, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.REMOVE)
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_3.setGeometry(QtCore.QRect(440, 150, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.UPDATE)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Password Management System"))
        self.groupBox.setTitle(_translate("Form", "DATABASE"))
        self.tableWidget.setSortingEnabled(True)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "WEBSITE"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "USERNAME"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "PASSWORD"))
        self.pushButton.setText(_translate("Form", "ADD"))
        self.pushButton_2.setText(_translate("Form", "REMOVE"))
        self.pushButton_3.setText(_translate("Form", "UPDATE"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Welcome()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
